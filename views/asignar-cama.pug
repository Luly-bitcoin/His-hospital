extends layout

block content
  head
    title Asignar Paciente a Cama
    link(rel="stylesheet", href="/css/style.css")
    style.
      body {
        font-family: 'Segoe UI', sans-serif;
        background: linear-gradient(to bottom, #7dbcff, rgba(255,255,255,0.8)), url('/img/hospital2.jpg'), url('/img/hospital .jpg'), url('/img/hospital3.jpg');
        background-repeat: no-repeat;
        background-size: cover, 33.33% 100%, 33.33% 100%, 33.33% 100%;
        background-position: center, left, center, right;
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding: 40px 0;
      }
      select {
        width: 100%;
      }
      .paciente-box{
        padding: 16px 24px;
      }
      .paciente-info p{
        margin: 4px 0;
        font-size: 16px;
        text-align: center;
      }

  .contenedor 
    img.logo-flotante(src="/img/logo.png", alt="Logo")
    .formulario-box 
      br
      br
      h1 Asignar Paciente a Cama

      form(method="POST", action="/asignar-paciente")
        if pacienteSeleccionado 
          .paciente-box  
            h3 Paciente Seleccionado 
            .paciente-info 
              p DNI: #{pacienteSeleccionado.dni} | Nombre: #{pacienteSeleccionado.nombre} | Sexo: #{pacienteSeleccionado.sexo} 

            input(type="hidden", name="dni_pacientes", value="pacienteSeleccionado.dni")
            input(type="hidden", name="sexo", value="pacienteSeleccionado.sexo")
        else 
          .paciente-box 
            h3 Paciente Seleccionado 
            p(style="color: crimson; font-weight: bold;") No hay paciente seleccionado

        label(for="tipo_ingreso") Tipo de ingreso 
        Select(name="tipo_ingreso", id="tipo_ingreso" required)
          option(value="" disabled selected) --Seleccione una opcion --
          option(value="guardia") Guardia 
          option(value="emergencias") Emergencias 
          option(value="derivacion_medica") Derivacion Medica
          option(value="cita_programada") Cita Programada  

        label(for="ala") Seleccione un Ala
        select(name="id_ala", id="id_ala" required)
          option(value="" disabled selected) -- Seleccione Ala --
          each ala in alas
            option(value=ala.id) #{ala.nombre}

        

        label(for="id_habitacion") Seleccione Habitación
        select(name="id_habitacion", id="id_habitacion" required disabled)
          option(value="" disabled selected) -- Seleccione Habitación --
          each ala in alas 
            optgroup(label=ala.nombre)
              each habitacion in ala.habitaciones 
                option(value=habitacion.id) Habitacion: #{habitacion.id} - Capacidad: #{habitacion.capacidad}
        

        label(for="id_cama") Seleccione Cama
        select(name="id_cama", id="id_cama" required disabled)
          option(value="" disabled selected) -- Seleccione Cama --

        br

        button(type="submit" class="boton") Asignar Paciente

  script.
    const alasSelect = document.getElementById('id_ala');
    const habitacionesSelect = document.getElementById('id_habitacion');
    const camasSelect = document.getElementById('id_cama');

    alasSelect.addEventListener('change', async () => {
      const alaId = alasSelect.value;
      habitacionesSelect.disabled = true;
      camasSelect.innerHTML = '<option disabled selected>-- Seleccione Cama --</option>';
      camasSelect.disabled = true;

      if(!alaId) return;

      try {
        const res = await fetch(`/api/habitaciones/${alaId}`);
        const habitaciones = await res.json();

        habitacionesSelect.innerHTML = '<option disabled selected>-- Seleccione Habitación --</option>';
        habitaciones.forEach(hab => {
          habitacionesSelect.innerHTML += `<option value="${hab.id}">Habitación ${hab.id} (Capacidad: ${hab.capacidad})</option>`;
        });
        habitacionesSelect.disabled = false;
      } catch(e) {
        habitacionesSelect.innerHTML = '<option disabled selected>Error al cargar</option>';
      }
    });

    habitacionesSelect.addEventListener('change', async () => {
      const habId = habitacionesSelect.value;
      camasSelect.disabled = true;
      if (!habId) return;

      try {
        const res = await fetch(`/api/camas/${habId}`);
        const camas = await res.json();

        camasSelect.innerHTML = '<option disabled selected>-- Seleccione Cama --</option>';
        
        camas
          .filter(cama => cama.estado === 'libre') 
          .forEach(cama => {
            camasSelect.innerHTML += `<option value="${cama.id}" data-sexo="${cama.sexo || ''}">Cama: ${cama.id}</option>`;
          });

        camasSelect.disabled = false;
      } catch (e) {
        camasSelect.innerHTML = '<option disabled selected>Error al cargar</option>';
      }
    });

    const pacientesSelect = document.getElementById('dni_paciente');
    camasSelect.addEventListener('change', () => {
      const camaSexo = camasSelect.options[camasSelect.selectedIndex].dataset.sexo || '';
      const pacienteSexo = pacientesSelect.options[pacientesSelect.selectedIndex]?.dataset.sexo || '';
      if (camaSexo && pacienteSexo && camaSexo !== pacienteSexo) {
        alert('No se puede asignar paciente de sexo distinto en habitación con dos camas.');
        camasSelect.value = '';
      }
    });
